{
    "swagger": "2.0",
    "info": {
        "title": "Automated Supply",
        "description": "An API that provides access to audiences for vendors",
        "version": "1.0.0"
    },
    "host": "supplier.cmix.com",
    "schemes": [
        "https"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "HTTP Basic Authentication"
        }
    },
    "paths": {
        "/audiences": {
            "get": {
                "summary": "GET Audiences",
                "description": "Returns a list of all audiences available for registration",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of audiences returned.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 500
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Specify the page to view.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filter results by resource properties",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "tags": [
                    "Audiences"
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Audience"
                            }
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/audiences/{audienceId}": {
            "get": {
                "summary": "GET Audience",
                "description": "Returns a single audience",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "audienceId",
                        "in": "path",
                        "description": "ID of the audience to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Audiences"
                ],
                "responses": {
                    "200": {
                        "description": "An array of audiences",
                        "schema": {
                            "$ref": "#/definitions/Audience"
                        },
                        "headers": {
                            "Total-Items": {
                                "description": "The total number of items in the collection",
                                "type": "integer"
                            },
                            "Total-Pages": {
                                "description": "The total number of pages",
                                "type": "integer"
                            },
                            "Page": {
                                "description": "The current page in view",
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The audience was not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/audiences/{audienceId}/quotas": {
            "get": {
                "summary": "GET Audience Quotas",
                "description": "Returns a list of all quotas for an audience",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "audienceId",
                        "in": "path",
                        "description": "ID of the audience to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Audiences",
                    "Quotas"
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotaGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/registrations": {
            "post": {
                "summary": "POST Registration",
                "description": "Register for an audience",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegistrationForm"
                        }
                    }
                ],
                "tags": [
                    "Registrations"
                ],
                "responses": {
                    "201": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Registration"
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "The vendor is already registered for the audience",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "GET Registrations",
                "description": "Returns a list of registrations for the vendor",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of registrations returned.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 500
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Specify the page to view.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filter results by resource properties",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "tags": [
                    "Registrations"
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Registration"
                            }
                        },
                        "headers": {
                            "Total-Items": {
                                "description": "The total number of items in the collection",
                                "type": "integer"
                            },
                            "Total-Pages": {
                                "description": "The total number of pages",
                                "type": "integer"
                            },
                            "Page": {
                                "description": "The current page in view",
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/registrations/{registrationId}": {
            "get": {
                "summary": "GET Registration",
                "description": "Returns a single registration of the vendor",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "registrationId",
                        "in": "path",
                        "description": "ID of the registration to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Registrations"
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Registration"
                        }
                    },
                    "404": {
                        "description": "The registration was not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "400": {
                        "description": "The request was malformed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Audience": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique ID of the audience"
                },
                "cxNumber": {
                    "type": "string",
                    "description": "ID of the project that the audience belongs to"
                },
                "isRegistered": {
                    "type": "boolean",
                    "description": "Indicates if the vendor has registered for the audience"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the audience"
                },
                "country": {
                    "type": "string",
                    "description": "Target country of the audience"
                },
                "language": {
                    "type": "string",
                    "description": "Target language of the audience"
                },
                "anticipatedIR": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Anticipated incidence rate"
                },
                "anticipatedLOI": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Anticipated length of interview"
                },
                "actualIR": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Actual incidence rate"
                },
                "actualLOI": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Actual length of interview"
                },
                "completesRemaining": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of completes remaining for the audience"
                },
                "expectedEndDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expeceted end date of the audience. Not the actual end date"
                },
                "category": {
                    "type": "string",
                    "description": "Category of the audience"
                },
                "subCategory": {
                    "type": "string",
                    "description": "Subcategory of the audience"
                },
                "trueSample": {
                    "type": "boolean",
                    "description": "Indicates if TrueSample is used"
                },
                "verity": {
                    "type": "boolean",
                    "description": "Indicates if Verity is used"
                },
                "pii": {
                    "type": "boolean",
                    "description": "Indicates if PII collection is required"
                },
                "segment": {
                    "type": "string",
                    "description": "Segment of the audience"
                },
                "contractedCPI": {
                    "type": "number",
                    "format": "float",
                    "description": "Contracted CPI for the vendor"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the audience. Possible values are \"OPEN\" and \"CLOSED\""
                }
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the condition"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the condition"
                }
            }
        },
        "Qualifier": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the qualifier"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the qualifier"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Condition"
                    }
                }
            }
        },
        "Quota": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the quota. Is unique for the audience."
                },
                "requested": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of completes requested"
                },
                "filled": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of completes filled"
                },
                "remaining": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of completes remaining"
                },
                "qualifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Qualifier"
                    },
                    "description": "Qualifiers of the quota"
                }
            }
        },
        "QuotaGroup": {
            "type": "object",
            "properties": {
                "quotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Quota"
                    },
                    "description": "Quotas of the quota group"
                }
            }
        },
        "RegistrationForm": {
            "type": "object",
            "properties": {
                "audienceId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the audience registering for"
                },
                "intent": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of completes vendor is intending to fill"
                },
                "complete": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a respondent completes the survey"
                },
                "fail": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a respondent fails a survey"
                },
                "fraud": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a respondent is identified as fraudulent"
                },
                "quotaFull": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a survey has met its quotas"
                },
                "terminate": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a respondent has been terminated"
                },
                "alreadyTaken": {
                    "type": "string",
                    "format": "url",
                    "description": "Redirect URL used when a respondent has already taken the survey"
                }
            }
        },
        "EntryLinks": {
            "type": "object",
            "properties": {
                "live": {
                    "type": "string",
                    "format": "url",
                    "description": "The live entry link to the survey"
                },
                "test": {
                    "type": "string",
                    "format": "url",
                    "description": "The test entry link to the survey"
                }
            }
        },
        "Registration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique ID of the registration"
                },
                "audienceId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the audience that the registration is for"
                },
                "dateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 formatted date specifying when the registration was created"
                },
                "intent": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of completes that the vendor estimated to fill"
                },
                "contractedCPI": {
                    "type": "number",
                    "format": "float",
                    "description": "Contracted CPI for the vendor"
                },
                "totalCompletes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of completes filled by the vendor"
                },
                "entryLinks": {
                    "$ref": "#/definitions/EntryLinks"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Message of the error"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Code of the error"
                }
            }
        }
    }
}